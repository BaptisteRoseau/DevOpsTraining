default:
  image: ubuntu:latest

stages:
- build
- test
- deploy

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml # Ultimate
  - template: Security/License-Scanning.gitlab-ci.yml # Ultimate

variables:
  PYTHONPATH: "$CI_PROJECT_DIR/src"
  SECRET_DETECTION_EXCLUDED_PATHS: "tst"

markdown_lint:
  image: node:latest
  needs: []
  rules:
    - changes:
      - "*.md"
      - "**/*.md"
  script:
    - npm install -g markdownlint-cli
    - markdownlint -c .markdownlint.json $(find . -type f -name "*.md")

markdown_link:
  needs: []
  image: node:latest
  rules:
    - changes:
      - "*.md"
      - "**/*.md"
  script:
    - npm install -g markdown-link-check
    - echo '{}' > /tmp/config.json
    - markdown-link-check -c /tmp/config.json $(find . -type f -name "*.md" -not -path ".git*")

spelling:
  image: node:latest
  needs: []
  allow_failure: true
  script:
    - npm install -g cspell@latest
    - cspell --color --locale "en,fr" --config .ci/cpsell/config.json README.md tutorials/** reports/**

unit-test-job:
  image: python:latest
  stage: test
  rules:
    - exists:
      - "*.py"
      - "**/*.py"
  script:
    - echo "Running unit tests..."
    - python3 -m pip install pytest
    - python3 -m pip install -r requirements.txt
    - python3 -m pytest tst --junitxml=unit_test_results.xml
  artifacts:
    reports:
      junit: unit_test_results.xml
    when: always
    expire_in: 1 days

lint-test-job:
  image: python:latest
  stage: test
  needs: []
  rules:
    - changes:
      - "*.py"
      - "**/*.py"
  script:
    - echo "Runing pylint tests"
    - python3 -m pip install pylint mypy
    - python3 -m pylint src/**
    - echo "Runing mypy tests"
    - for file in $(find src -type f -name "*.py"); do python3 -m mypy $file; done

bandit-test-job:
  image: python:latest
  stage: test
  needs: []
  rules:
    - changes:
      - "*.py"
      - "**/*.py"
  script:
    - python3 -m pip install --upgrade pip
    - python3 -m pip install --upgrade setuptools
    - python3 -m pip install bandit

update_issue_labels:
  script:
    - >
      curl --request PUT
      --header "PRIVATE-TOKEN: $CI_JOB_TOKEN"
      --data "labels=DONE"
      "$CI_PROJECT_URL/api/v4/projects/$CI_PROJECT_ID/issues/$CI_MERGE_REQUEST_IID"
  only:
    - merge_requests

# TODO: Add valgrind verifyer (memory leaks & profiling (only when benchmark is set to true))
